!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CURL_UTILS_HPP	curl_utils.hpp	2;"	d
QUOTE_HPP	quote.hpp	2;"	d
Quote	quote.cpp	/^Quote::Quote(std::string symbol) {$/;"	f	class:Quote
Quote	quote.hpp	/^class Quote {$/;"	c
SPOT_HPP	spot.hpp	2;"	d
Spot	spot.cpp	/^Spot::Spot(std::string date, double open, double high, double low, double close) {$/;"	f	class:Spot
Spot	spot.cpp	/^Spot::Spot(std::string date, double price){$/;"	f	class:Spot
Spot	spot.cpp	/^Spot::Spot(std::time_t date, double open, double high, double low, double close) {$/;"	f	class:Spot
Spot	spot.cpp	/^Spot::Spot(std::time_t date, double price){$/;"	f	class:Spot
Spot	spot.hpp	/^class Spot {$/;"	c
TIME_UTILS_H	time_utils.hpp	2;"	d
before	time_utils.cpp	/^bool before(const char *date1, const char *date2) {$/;"	f
clearSpots	quote.cpp	/^void Quote::clearSpots() {$/;"	f	class:Quote
close	spot.hpp	/^    double close;$/;"	m	class:Spot
currentEpoch	time_utils.cpp	/^std::time_t currentEpoch() {$/;"	f
date	spot.hpp	/^    std::time_t date;$/;"	m	class:Spot
dateToEpoch	time_utils.cpp	/^std::time_t dateToEpoch(const char *date) {$/;"	f
downloadYahooCsv	curl_utils.cpp	/^std::string downloadYahooCsv(std::string symbol,$/;"	f
epochToDate	time_utils.cpp	/^std::string epochToDate(const std::time_t epoch) {$/;"	f
extractYahooCookie	curl_utils.cpp	/^std::string extractYahooCookie(const char* filename) {$/;"	f
extractYahooCrumb	curl_utils.cpp	/^std::string extractYahooCrumb(std::string code) {$/;"	f
getClose	spot.cpp	/^double Spot::getClose() {$/;"	f	class:Spot
getDate	spot.cpp	/^std::time_t Spot::getDate() {$/;"	f	class:Spot
getDateToString	spot.cpp	/^std::string Spot::getDateToString() {$/;"	f	class:Spot
getHigh	spot.cpp	/^double Spot::getHigh() {$/;"	f	class:Spot
getHistoricalCsv	quote.cpp	/^std::string Quote::getHistoricalCsv(std::time_t period1,$/;"	f	class:Quote
getHistoricalSpots	quote.cpp	/^void Quote::getHistoricalSpots(const char *date1,$/;"	f	class:Quote
getHistoricalSpots	quote.cpp	/^void Quote::getHistoricalSpots(std::time_t period1,$/;"	f	class:Quote
getLow	spot.cpp	/^double Spot::getLow() {$/;"	f	class:Spot
getOpen	spot.cpp	/^double Spot::getOpen() {$/;"	f	class:Spot
getSpot	quote.cpp	/^Spot Quote::getSpot(size_t i) {$/;"	f	class:Quote
getSpot	quote.cpp	/^Spot Quote::getSpot(std::string date) {$/;"	f	class:Quote
getSpot	quote.cpp	/^Spot Quote::getSpot(std::time_t date) {$/;"	f	class:Quote
getYahooCrumbCookie	curl_utils.cpp	/^void getYahooCrumbCookie(std::string url,$/;"	f
high	spot.hpp	/^    double high;$/;"	m	class:Spot
low	spot.hpp	/^    double low;$/;"	m	class:Spot
main	example.cpp	/^int main() {$/;"	f
nbSpots	quote.cpp	/^size_t Quote::nbSpots() {$/;"	f	class:Quote
needNewCookie	curl_utils.cpp	/^bool needNewCookie(const char* filename, std::time_t time) {$/;"	f
open	spot.hpp	/^    double open;$/;"	m	class:Spot
printSpot	spot.cpp	/^void Spot::printSpot() {$/;"	f	class:Spot
printSpots	quote.cpp	/^void Quote::printSpots() {$/;"	f	class:Quote
readCookieCredential	curl_utils.cpp	/^void readCookieCredential(const char* filename, std::string *cookie) {$/;"	f
readCookieTime	curl_utils.cpp	/^std::time_t readCookieTime(const char* filename) {$/;"	f
readCrumbCredential	curl_utils.cpp	/^void readCrumbCredential(const char* filename, std::string *crumb) {$/;"	f
saveYahooCredentials	curl_utils.cpp	/^void saveYahooCredentials(const char* filename, std::string *crumb, std::string *cookie) {$/;"	f
spots	quote.hpp	/^    std::vector<Spot> spots;$/;"	m	class:Quote
symbol	quote.hpp	/^    std::string symbol;$/;"	m	class:Quote
toString	spot.cpp	/^std::string Spot::toString() {$/;"	f	class:Spot
writeCallback	curl_utils.cpp	/^size_t writeCallback(char *content, size_t size, size_t nmemb, void *userdata) {$/;"	f
~Quote	quote.cpp	/^Quote::~Quote() {}$/;"	f	class:Quote
~Spot	spot.cpp	/^Spot::~Spot() {}$/;"	f	class:Spot
